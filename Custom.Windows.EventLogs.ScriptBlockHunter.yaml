name: Custom.Windows.EventLogs.ScriptBlockHunter
description: |
  This Artifact will hunt the Windows ScriptBlock event log 4104
  and will concatenate all events by ScriptBlock Id to produce the whole script.

author: Thomas Benos
precondition: SELECT OS From info() where OS = 'windows'

parameters:
  - name: EvtxGlob
    default: '%SystemRoot%\System32\Winevt\Logs\*.evtx'
  - name: IocRegex
    type: regex
    description: "IOC Regex"
    default: .
  - name: WhitelistRegex
    description: "Regex of string to witelist"
    type: regex
  - name: VSSAnalysisAge
    type: int
    default: 0
    description: |
      If larger than zero we analyze VSS within this many days
      ago. (e.g 7 will analyze all VSS within the last week).  Note
      that when using VSS analysis we have to use the ntfs accessor
      for everything which will be much slower.
  - name: DateAfter
    type: timestamp
    description: "search for events after this date. YYYY-MM-DDTmm:hh:ssZ"
  - name: DateBefore
    type: timestamp
    description: "search for events before this date. YYYY-MM-DDTmm:hh:ssZ"

sources:
  - query: |
        LET DateAfterTime <= if(condition=DateAfter,
        then=timestamp(epoch=DateAfter), else=timestamp(epoch="1600-01-01"))
        LET DateBeforeTime <= if(condition=DateBefore,
        then=timestamp(epoch=DateBefore), else=timestamp(epoch="2200-01-01"))
        
        LET PowershellEvents <=
        
        SELECT *, EventData.ScriptBlockText as ScriptBlockText, EventData.ScriptBlockId as ScriptBlockId, EventData.MessageNumber as MessageNumber FROM Artifact.Windows.EventLogs.EvtxHunter(ProviderRegex="Powershell", IdRegex="4104",VSSAnalysisAge=VSSAnalysisAge, EvtxGlob=EvtxGlob, IocRegex=IocRegex, WhitelistRegex=WhitelistRegex, DateAfter=DateAfterTime, DateBefore=DateAfterTime)
        ORDER BY EventTime 
        
      
        LET FirstEvents <=
        SELECT *, ScriptBlockId as Id FROM PowershellEvents WHERE MessageNumber=1
        
        LET Ordered <=
        SELECT * FROM foreach(
        row=FirstEvents,
        query={SELECT EventTime, ScriptBlockId, Username, {SELECT MessageNumber, ScriptBlockText FROM PowershellEvents WHERE ScriptBlockId=Id ORDER BY MessageNumber} as ScriptBlocks FROM scope()}
        ) ORDER BY EventTime
        
        SELECT EventTime, ScriptBlockId, Username, dict(Script=join(array=ScriptBlocks.ScriptBlockText)) AS PowershellScript FROM Ordered